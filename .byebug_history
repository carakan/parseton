exit
cont
row
search_in_row(row, words)
cont
row
search_in_row(row, words)
exit
cont
row['Name'].downcase.include?(words.first.downcase)
row['Name'].downcase.include?(word.downcase)
words
cont
results
next
words
cont
query
cont
query
cont
query
cont
query.scan(REGX_VALIDATE)
query.scan(REGX_VALIDATE).empty?
query
cont
query.scan(REGX_SEARCH)
query
cont
search.results
cont
search.results.size
search.results
cont
search.results.size
search.results
seach.results
cont
exit
      words.all?{|word| row['Designed by'].include?(word) }
      words.all?{|word| row['Type'].include?(word) } ||
      words.all?{|word| row['Name'].include?(word) } ||
words
words.all?{|word| row['Designed by'].include?(word)}
words.all?{|word| row['Designed by'].include?(word)
words.all?{|word| row['Type'].include?(word) }
words.all?{|word| row['Name'].include?(word) }
cont
search.results.first
cont
@query
exit
words.flatten
words
row
cont
JSON.parse(SOURCE_JSON.read).first["Name"]
JSON.parse(SOURCE_JSON.read).first
JSON.parse(SOURCE_JSON.read)
SOURCE_JSON.read
SOURCE_JSON
JSON.parse(File.open(SOURCE_JSON))
SOURCE_JSON.to_s
exit
query.scan(REGX_VALIDATE)
query.scan(REGX_SEARCH)
query
exit
query
exit
cont
query
cont
@query.blank?
@query.strip
@query.trim
@query.chop
@query
